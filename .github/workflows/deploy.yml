name: Provision and Configure OpenSID with ASG

on:
  push:
    branches:
      - main

jobs:
  provision-and-configure:
    name: Provision AWS with Terraform & Configure with Ansible
    runs-on: ubuntu-latest

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      # Terraform Init & Apply
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform

      # Setup SSH Private Key
      - name: Setup SSH Key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/opensid-key.pem
          chmod 600 ~/.ssh/opensid-key.pem

      # Install Ansible
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      # Generate Ansible Inventory (ASG Public IPs)
      - name: Generate Ansible Inventory
        run: |
          echo "[ec2-instances]" > inventory.ini
          aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].[PublicIpAddress]' \
            --filters "Name=instance-state-name,Values=running" \
            --output text >> inventory.ini

      # Run Ansible Playbook
      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory.ini --private-key ~/.ssh/opensid-key.pem playbook.yml
